/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Entrenador.Trainer;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author crisc
 */
public class Battle extends JFrame {

    public  Trainer[] trainers;
    public String[] pokemonsBattle;
    /**
     * Creates new form Battle
     */
    FondoPanel fondo = new FondoPanel();
    public Battle() {

        initComponents();
        cargarImagenPokemon();
        cargarImagenPokemon2();
    }
    public Battle(Trainer[] trainers, String[] pokemonsBattle) {
        this.pokemonsBattle = pokemonsBattle;
        this.trainers = trainers;
        initComponents();
        cargarImagenPokemon();
        cargarImagenPokemon2();
        System.out.println(pokemonsBattle[0]+ " "+  pokemonsBattle[1]);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel2 = new JPanel();
        jPanel1 = new FondoPanel();
        imageUrl = new JLabel();
        ImageUrl2 = new JLabel();
        ataque1_2 = new JToggleButton();
        ataque1_1 = new JToggleButton();
        ataque1_3 = new JToggleButton();
        ataque1_4 = new JToggleButton();
        vida1 = new JLabel();
        pokemon1 = new JLabel();
        entrenador1 = new JLabel();
        entrenador2 = new JLabel();
        pokemo2 = new JLabel();
        vida2 = new JLabel();
        ataque2_1 = new JToggleButton();
        ataque2_2 = new JToggleButton();
        ataque2_3 = new JToggleButton();
        ataque2_4 = new JToggleButton();
        jPanel3 = new JPanel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new Color(132, 224, 223));

        imageUrl.setText("jLabel2");

        ImageUrl2.setText("jLabel3");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(imageUrl, GroupLayout.PREFERRED_SIZE, 249, GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(ImageUrl2, GroupLayout.PREFERRED_SIZE, 213, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(124, Short.MAX_VALUE)
                                .addComponent(imageUrl, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(ImageUrl2, GroupLayout.PREFERRED_SIZE, 134, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        int x=0, y = 0;
        for(int i = 0; i < trainers[0].getPokemonTeam().size(); i++){
            if(pokemonsBattle[0] == trainers[0].getPokemonTeam().get(i).getPokedexId()){
                x = i;
            }
        }
        for(int i = 0; i < trainers[1].getPokemonTeam().size(); i++){
            if(pokemonsBattle[1] == trainers[1].getPokemonTeam().get(i).getPokedexId()){
                y = i;
            }
        }

        ataque1_2.setBackground(new Color(255, 255, 255));
        ataque1_2.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque1_2.setText(trainers[0].getPokemonTeam().get(x).getMoves().get(1).getName());
        ataque1_2.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque1_2MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque1_2MouseExited(evt);
            }
        });
        ataque1_2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                ataque1_2ActionPerformed(evt);
            }
        });

        ataque1_1.setBackground(new Color(255, 255, 255));
        ataque1_1.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque1_1.setText(trainers[0].getPokemonTeam().get(x).getMoves().get(0).getName());
        ataque1_1.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque1_1MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque1_1MouseExited(evt);
            }
        });

        ataque1_3.setBackground(new Color(255, 255, 255));
        ataque1_3.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque1_3.setText(trainers[0].getPokemonTeam().get(x).getMoves().get(2).getName());
        ataque1_3.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque1_3MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque1_3MouseExited(evt);
            }
        });

        ataque1_4.setBackground(new Color(255, 255, 255));
        ataque1_4.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque1_4.setText(trainers[0].getPokemonTeam().get(x).getMoves().get(3).getName());
        ataque1_4.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque1_4MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque1_4MouseExited(evt);
            }
        });


        vida1.setFont(new Font("Roboto Black", 3, 12)); // NOI18N
        vida1.setText(String.valueOf(trainers[1].getPokemonTeam().get(y).getHp()));

        pokemon1.setFont(new Font("Roboto Black", 3, 12)); // NOI18N
        pokemon1.setText(trainers[0].getPokemonTeam().get(x).getName());

        entrenador1.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        entrenador1.setText(trainers[0].getName());

        entrenador2.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        entrenador2.setText(trainers[1].getName());

        pokemo2.setFont(new Font("Roboto Black", 3, 12)); // NOI18N
        pokemo2.setText(trainers[1].getPokemonTeam().get(y).getName());

        vida2.setFont(new Font("Roboto Black", 3, 12)); // NOI18N
        vida2.setText(String.valueOf(trainers[1].getPokemonTeam().get(y).getHp()));

        ataque2_1.setBackground(new Color(255, 255, 255));
        ataque2_1.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque2_1.setText(trainers[1].getPokemonTeam().get(y).getMoves().get(0).getName());
        ataque2_1.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque2_1MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque2_1MouseExited(evt);
            }
        });

        ataque2_2.setBackground(new Color(255, 255, 255));
        ataque2_2.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque2_2.setText(trainers[1].getPokemonTeam().get(y).getMoves().get(1).getName());
        ataque2_2.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque2_2MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque2_2MouseExited(evt);
            }
        });
        ataque2_2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                ataque2_2ActionPerformed(evt);
            }
        });

        ataque2_3.setBackground(new Color(255, 255, 255));
        ataque2_3.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque2_3.setText(trainers[1].getPokemonTeam().get(y).getMoves().get(2).getName());
        ataque2_3.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque2_3MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque2_3MouseExited(evt);
            }
        });

        ataque2_4.setBackground(new Color(255, 255, 255));
        ataque2_4.setFont(new Font("Roboto", 2, 12)); // NOI18N
        ataque2_4.setText(trainers[1].getPokemonTeam().get(y).getMoves().get(3).getName());
        ataque2_4.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent evt) {
                ataque2_4MouseEntered(evt);
            }
            public void mouseExited(MouseEvent evt) {
                ataque2_4MouseExited(evt);
            }
        });

        jPanel3.setPreferredSize(new Dimension(5, 0));

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 5, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 3, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(entrenador1)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(ataque1_3)
                                                        .addComponent(ataque1_1)
                                                        .addComponent(pokemon1))
                                                .addGap(40, 40, 40)
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(vida1, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(ataque1_2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(ataque1_4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(ataque2_1, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ataque2_3)
                                                        .addComponent(pokemo2))
                                                .addGap(35, 35, 35)
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(ataque2_4)
                                                        .addComponent(ataque2_2)
                                                        .addComponent(vida2)))
                                        .addComponent(entrenador2))
                                .addGap(34, 34, 34))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(entrenador1))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(entrenador2)))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                .addComponent(pokemon1)
                                                                .addComponent(vida1))
                                                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                .addComponent(pokemo2)
                                                                .addComponent(vida2)))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(ataque1_1)
                                                                        .addComponent(ataque1_2))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(ataque1_3)
                                                                        .addComponent(ataque1_4)))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(ataque2_2)
                                                                        .addComponent(ataque2_1))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(ataque2_3)
                                                                        .addComponent(ataque2_4))))
                                                .addGap(0, 6, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)))
                                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void ataque2_4MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_4.setBackground(Color.white);
    }

    private void ataque2_4MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_4.setBackground(new Color (7, 155, 219));
    }

    private void ataque2_3MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_3.setBackground(Color.white);
    }

    private void ataque2_3MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_3.setBackground(new Color (7, 155, 219));
    }

    private void ataque2_2ActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void ataque2_2MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_2.setBackground(Color.white);
    }

    private void ataque2_2MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_2.setBackground(new Color (7, 155, 219));
    }

    private void ataque2_1MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_1.setBackground(Color.white);
    }

    private void ataque2_1MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque2_1.setBackground(new Color (7, 155, 219));
    }

    private void ataque1_4MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_4.setBackground(Color.white);
    }

    private void ataque1_4MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_4.setBackground(new Color (7, 155, 219));
    }

    private void ataque1_3MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_3.setBackground(Color.white);
    }

    private void ataque1_3MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_3.setBackground(new Color (7, 155, 219));
    }

    private void ataque1_1MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_1.setBackground(Color.white);
    }

    private void ataque1_1MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_1.setBackground(new Color (7, 155, 219));
    }

    private void ataque1_2ActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void ataque1_2MouseExited(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_2.setBackground(Color.white);
    }

    private void ataque1_2MouseEntered(MouseEvent evt) {
        // TODO add your handling code here:
        ataque1_2.setBackground(new Color (7, 155, 219));
    }



    private void cargarImagenPokemon() {
        new SwingWorker<ImageIcon, Void>() {
            @Override
            protected ImageIcon doInBackground() throws Exception {
                String urlImagen = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/"+ pokemonsBattle[0]+ ".png"; // Pikachu
                Image imagen = ImageIO.read(new URL(urlImagen));
                return new ImageIcon(imagen);
            }

            @Override
            protected void done() {
                try {
                    ImageIcon icon = get();
                    // Escalar al tamaño del JLabel
                    Image imagenEscalada = icon.getImage().getScaledInstance(
                            imageUrl.getWidth(),
                            imageUrl.getHeight(),
                            Image.SCALE_SMOOTH);
                    imageUrl.setIcon(new ImageIcon(imagenEscalada));
                    imageUrl.setText("");
                } catch (Exception e) {
                    imageUrl.setText("Error al cargar");
                    e.printStackTrace();
                }
            }
        }.execute();
    }
    private void cargarImagenPokemon2() {
        new SwingWorker<ImageIcon, Void>() {
            @Override
            protected ImageIcon doInBackground() throws Exception {
                String urlImagen = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/"+pokemonsBattle[1]+ ".png";
                Image imagen = ImageIO.read(new URL(urlImagen));
                return new ImageIcon(imagen);
            }

            @Override
            protected void done() {
                try {
                    ImageIcon icon = get();
                    Image imagenEscalada = icon.getImage().getScaledInstance(
                            ImageUrl2.getWidth() > 0 ? ImageUrl2.getWidth() : 80,
                            ImageUrl2.getHeight() > 0 ? ImageUrl2.getHeight() : 80,
                            Image.SCALE_SMOOTH);
                    ImageUrl2.setIcon(new ImageIcon(imagenEscalada));
                    ImageUrl2.setText("");
                } catch (Exception e) {
                    ImageUrl2.setText("Error al cargar");
                    e.printStackTrace();
                }
            }
        }.execute();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Battle.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Battle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private JLabel ImageUrl2;
    private JToggleButton ataque1_1;
    private JToggleButton ataque1_2;
    private JToggleButton ataque1_3;
    private JToggleButton ataque1_4;
    private JToggleButton ataque2_1;
    private JToggleButton ataque2_2;
    private JToggleButton ataque2_3;
    private JToggleButton ataque2_4;
    private JLabel entrenador1;
    private JLabel entrenador2;
    private JLabel imageUrl;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JLabel pokemo2;
    private JLabel pokemon1;
    private JLabel vida1;
    private JLabel vida2;
    // End of variables declaration

    class FondoPanel extends JPanel{
        private Image imagen;
        @Override
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("fondo.jpg")).getImage();
            g.drawImage(imagen, 0, 0 , getWidth(), getHeight(), this);

            setOpaque(false);

            super.paint(g);
        }
    }
}
